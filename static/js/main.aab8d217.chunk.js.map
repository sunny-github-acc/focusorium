{"version":3,"sources":["comps/layout/SignedInLinks.js","store/actions/authActions.js","comps/layout/SignedOutLinks.js","comps/dashboard/Notifications.js","comps/layout/Navbar.js","comps/projects/ProjectSummary.js","comps/projects/ProjectList.js","comps/dashboard/Dashboard.js","comps/projects/ProjectDetails.js","store/actions/projectActions.js","comps/auth/SignIn.js","comps/auth/SignUp.js","comps/projects/ProjectCreation.js","comps/dashboard/Notfound.js","comps/dashboard/MobileNotifications.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","getFirebase","auth","then","type","props","className","side","to","href","onClick","SignedOutLinks","Notifications","notifications","map","item","key","id","user","content","moment","time","toDate","fromNow","tabindex","compose","state","firebase","profile","firestore","ordered","firestoreConnect","collection","limit","orderBy","links","uid","mobileLinks","isVisible","data-target","initials","style","paddingRight","firstName","lastName","email","minWidth","ProjectSummary","project","goal","nuggets","ProjectList","projects","listProjects","Dashboard","this","Component","ProjectDetails","handleDelete","e","deleteProject","match","params","history","push","paddingTop","padding","createdAt","calendar","marginTop","ownProps","data","getFirestore","doc","delete","catch","err","SignIn","password","handleChange","setState","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","credentials","signInWithEmailAndPassword","SignUp","signUp","newUser","createUserWithEmailAndPassword","resp","set","console","log","ProjectCreation","createProject","setTimeout","blue-text","lighten-text-2","required","authorUID","Date","add","authorName","authorLastName","Notfound","App","sidenav","document","querySelector","M","Sidenav","init","elems","querySelectorAll","Dropdown","inDuration","outDuration","constrainWidth","coverTrigger","exact","path","component","MobileNotifications","Boolean","window","location","hostname","initState","authReducer","action","message","goals","projectReducer","rootReducer","combineReducers","firebaseReducer","firestoreReducer","fbConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","rrfProps","config","userProfile","useFirestoreForProfile","enableRedirectHandling","resetBeforeLogin","createFirestoreInstance","presence","sessions","AuthIsLoaded","children","useSelector","isLoaded","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.aab8d217.chunk.js","sourcesContent":["import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { connect } from 'react-redux'\r\nimport { signOut } from '../../store/actions/authActions'\r\n\r\nconst SignedInLinks = (props) => {\r\n    // since mapState.. props now is accessible while inserted as argument\r\n    return (\r\n        <div>\r\n            <ul className={props.side}>\r\n                <li><NavLink to=\"/create\">Get started</NavLink></li>\r\n                <li><a href=\"#ff\" onClick={props.signOut}>Log out</a></li>        \r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signOut: () => dispatch(signOut())\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(SignedInLinks)","export const signIn = (credentials) => {\r\n    return (dispatch, getState, {getFirebase} ) => {\r\n        const firebase = getFirebase();\r\n\r\n        firebase.auth().signInWithEmailAndPassword(\r\n            credentials.email,\r\n            credentials.password\r\n        ).then(() => {\r\n            dispatch({ type: \"LOGIN_SUCCESS\"})\r\n        }).catch((err) => {\r\n            dispatch({ type: \"LOGIN_ERROR\", err })\r\n        });\r\n    }\r\n}\r\n\r\nexport const signOut = () => {\r\n    return (dispatch, getState, { getFirebase } ) => {\r\n        const firebase = getFirebase();\r\n\r\n        firebase.auth().signOut().then(() => {\r\n            dispatch({ type: \"SIGNOUT_SUCCESS\" })\r\n        })\r\n    }\r\n}\r\n\r\nexport const signUp = (newUser) => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        const firebase = getFirebase();\r\n        const firestore = getFirestore();\r\n\r\n        firebase.auth().createUserWithEmailAndPassword(\r\n            newUser.email,\r\n            newUser.password\r\n        ).then((resp) => {\r\n            return firestore.collection(\"users\").doc(resp.user.uid).set({\r\n                firstName: newUser.firstName,\r\n                lastName: newUser.lastName,\r\n                initials: newUser.firstName[0] + newUser.lastName[0]\r\n             })\r\n            }).then(() => {\r\n                dispatch({ type: \"SIGNUP_SUCCESS\" })\r\n            }).catch(err => {\r\n                dispatch({ type: \"SIGNUP_ERROR\", err })\r\n            })\r\n            console.log(\":)\")\r\n        }\r\n    }\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n// NavLink vs Link???\r\n\r\nconst SignedOutLinks = ({side}) => {\r\n    return (\r\n        <div>\r\n            <ul className={side}>\r\n                <li><NavLink to=\"/signup\">Signup</NavLink></li>\r\n                <li><NavLink to=\"/login\">Login</NavLink></li>\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SignedOutLinks","import React from 'react'\r\nimport moment from 'moment'\r\n\r\nconst Notifications = (props) => {\r\n    const { notifications } = props;\r\n    return (\r\n        <div className=\"container blue-text lighten-text-2 \">\r\n            <p>\r\n                { notifications && notifications.map(item => {\r\n                    return (\r\n                    <div className=\"notification\" key={item.id}>\r\n                        {item.user} {item.content} {moment(item.time.toDate()).fromNow()}\r\n                        <li className=\"divider\" tabindex=\"-1\"></li>\r\n                    </div>\r\n                )\r\n                })}\r\n                \r\n            </p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notifications","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport SignedInLinks from './SignedInLinks';\r\nimport SignedOutLinks from './SignedOutLinks';\r\nimport { connect } from 'react-redux'\r\nimport Notifications from '../dashboard/Notifications'\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { compose } from 'redux';\r\n\r\nconst Navbar = (props) => {\r\n    const { auth, profile, notifications } = props;\r\n    const right = \"right\";\r\n    const defaultSide = \"right\";\r\n    const links = auth.uid ? \r\n        <SignedInLinks profile={profile} side={right} /> : \r\n        <SignedOutLinks side={right} />\r\n    const mobileLinks = auth.uid ? \r\n        <SignedInLinks profile={profile} side={defaultSide} /> : \r\n        <SignedOutLinks side={defaultSide} />\r\n    const isVisible = auth.uid ? \"\" : \"hide\";\r\n        return (\r\n            <div className=\"c\">\r\n            <nav className=\"nav-wrapper blue lighten-2\">\r\n                \r\n                <div className=\"container hide-on-small-only\">\r\n                    <Link to=\"/\" className=\"brand-logo left\">focusorium</Link>\r\n                    <div className=\"right\">\r\n                        <a className={'dropdown-trigger yellow red-text text-lighten-2 btn-floating btn ' + isVisible}\r\n                        href='/#' \r\n                        data-target='dropdown1'>\r\n                            {profile.initials}\r\n                        </a>\r\n                    </div>\r\n                    <ul className=\"right\">\r\n                        <a className={'dropdown-trigger ' + isVisible} \r\n                        style={{paddingRight: \"10px\"}} href='/#' data-target='dropdown2'>\r\n                            Notifications \r\n                        </a>\r\n                    </ul>\r\n                    { links }\r\n                </div>\r\n                \r\n                {/* mobile navbar */}\r\n                <div className=\"container hide-on-med-and-up\"> \r\n                    <Link to=\"/\" className=\"brand-logo left mobile-title\">focusorium</Link>\r\n                    <a href=\"/#\" className=\"sidenav-trigger right\" data-target=\"slide-out\">\r\n                        <i className=\"material-icons\">menu</i>\r\n                    </a>\r\n                    <Link className={\"btn right notification-btn blue white-text btn-flat lighten-2 \" + isVisible}\r\n                    to='/notifications'>\r\n                        <i className=\"material-icons\">notifications</i> \r\n                    </Link>\r\n                </div>\r\n            </nav>\r\n\r\n                {/* slide out  */}\r\n                <ul id=\"slide-out\" className=\"sidenav sidenav-close blue right\" >\r\n                    <div className=\"user-view\"><li>\r\n                        <a href=\"#user\">{ mobileLinks }</a>\r\n                    </li></div>\r\n                </ul>\r\n                \r\n                {/* dropdown content user */}\r\n                <div className=\"row\">\r\n                    <ul id='dropdown1' className='dropdown-content' >\r\n                        <li><a className=\"yellow red-text center text-lighten-2\" \r\n                        href=\"#!\">{profile.firstName} {profile.lastName}</a></li>\r\n                        <li><a className=\"yellow red-text center text-lighten-2\" \r\n                        href=\"#!\">{auth.email}</a></li>\r\n                    </ul>\r\n                </div>\r\n\r\n                {/* dropdown content notifications */}\r\n                <ul id='dropdown2' className='dropdown-content notifications'  style={{minWidth: \"550px\"}}>\r\n                    <Notifications notifications={notifications} />\r\n                </ul>\r\n            \r\n            </div>\r\n\r\n        )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth,\r\n        profile: state.firebase.profile,\r\n        notifications: state.firestore.ordered.notifications\r\n    }\r\n}\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n       { collection: \"notifications\", limit: 3, orderBy: [\"time\", \"desc\"] }\r\n    ])\r\n)(Navbar)","import React from 'react';\r\n\r\nconst ProjectSummary = ({project}) => {\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"card box z-depth-0 project-summary\">\r\n                <div className=\"card-content yellow z-depth-1 red-text text-lighten-2\">\r\n                    <span className=\"card-title \">{project.goal}</span>\r\n                    <span className=\"truncate\">{project.nuggets}</span>\r\n                </div>\r\n          </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default ProjectSummary","import React from 'react';\r\nimport ProjectSummary from './ProjectSummary';\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst ProjectList = ({projects}) => {\r\n    const listProjects = projects && projects.map(project => {\r\n        return (\r\n            <Link to={'/project/' + project.id} key={project.id} >\r\n                <ProjectSummary project={project} />\r\n            </Link>\r\n            )\r\n        }\r\n);\r\n\r\n    return (\r\n        <div className=\"project-list section\">\r\n            { listProjects }\r\n        </div>\r\n        \r\n        \r\n    )\r\n}\r\n\r\nexport default ProjectList","import React, { Component } from 'react';\r\nimport ProjectList from '../projects/ProjectList';\r\nimport { connect } from 'react-redux';\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport { Redirect } from 'react-router-dom';\r\n\r\n// connect connects component with redux store\r\n\r\nclass Dashboard extends Component {\r\n    render() {\r\n        const { projects, auth } = this.props;\r\n        \r\n        if (!auth.uid) return <Redirect to=\"/login\" />\r\n\r\n        return (\r\n            <div className=\"dashboard container\">\r\n                <div className=\"\">\r\n                    <ProjectList projects={projects}/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        projects: state.firestore.ordered.projects,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n       { collection: \"projects\", orderBy: [\"createdAt\", \"desc\"]}\r\n    ])\r\n)(Dashboard)\r\n\r\n// firestoreConnect connects redux and firestore","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport { Redirect } from 'react-router-dom'\r\nimport moment from 'moment'\r\nimport { Component } from 'react'\r\nimport { deleteProject } from '../../store/actions/projectActions'\r\n\r\nclass ProjectDetails extends Component {\r\n    handleDelete = (e) => {\r\n        this.props.deleteProject(this.props.match.params.id);\r\n        this.props.history.push(\"/\")\r\n    }\r\n    render() {\r\n        const { project, auth, profile } = this.props;\r\n        if (!auth.uid) return <Redirect to=\"/login\" />  \r\n\r\n        if (project) {\r\n            return (\r\n                <div className=\"container section project-details\">\r\n                    <div className=\"card yellow red-text text-lighten-2 z-depth-0\">\r\n                        <h4 className=\"card-content\">{project.goal}</h4>\r\n                        <h5 className=\"card-content\" style={{paddingTop: \"0\"}}>{project.nuggets}</h5>\r\n                        </div>\r\n                    <div className=\"card-action yellow blue-text text-lighten-2\"  \r\n                    style={{padding: \"5px\"}}>\r\n                        Posted by {profile.firstName} {profile.lastName}   <br />\r\n                        {moment(project.createdAt.toDate()).calendar()} <br />\r\n                        <button \r\n                        className=\"btn-small waves-effect wawes-dark z-depth-0 red left lighten-4 blue-text text-lighten-2\"\r\n                        onClick={this.handleDelete}\r\n                        style={{marginTop: \"15px\"}}>\r\n                            Delete this post\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n        )\r\n        } else {\r\n            return (\r\n                <div className=\"container title center\">\r\n                    <p>No projects at the moments</p>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    const id = ownProps.match.params.id;\r\n    const projects = state.firestore.data.projects;\r\n    const project = projects ? projects[id] : null;\r\n    // ownProps > props of a component before we attatch anything to it\r\n    return {\r\n        project: project,\r\n        auth: state.firebase.auth,\r\n        profile: state.firebase.profile\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        deleteProject: (id) => dispatch(deleteProject(id))\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    firestoreConnect(([\r\n        { collection: \"projects\" }\r\n    ]))\r\n)(ProjectDetails)","export const createProject = (project) => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        const firestore = getFirestore();\r\n        const profile = getState().firebase.profile;\r\n        const authorUID = getState().firebase.auth.uid;\r\n        const createdAt = new Date();\r\n        firestore.collection(\"projects\").add({\r\n            ...project,\r\n            authorName: profile.firstName,\r\n            authorLastName: profile.lastName,\r\n            createdAt,\r\n            authorUID\r\n        }).then(() => {\r\n            dispatch({ type: \"CREATE_PROJECT\", project});\r\n        }).catch((err) => {\r\n            dispatch({ type: \"CREATE_PROJECT_ERR\", err });\r\n        })\r\n    }\r\n};\r\n\r\nexport const deleteProject = (project) => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        const firestore = getFirestore();\r\n        firestore.collection(\"projects\")\r\n        .doc(project)\r\n        .delete()\r\n        .then(() => {\r\n            dispatch({ type: \"DELETE_PROJECT\", project });\r\n        }).catch((err) => {\r\n        dispatch({ type: \"DELETE_PROJECT_ERR\", err });\r\n        })\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { signIn } from '../../store/actions/authActions'\r\n\r\nclass SignIn extends Component {\r\n    state = {\r\n        email: \"\",\r\n        password: \"\"\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.signIn(this.state)\r\n    }\r\n    render() {\r\n        const { authError, auth } = this.props;\r\n        \r\n        if (auth.uid) return <Redirect to=\"/\" />\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"yellow\">\r\n                    <h5 className=\"yellow blue-text lighten-text-2\">Log In</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn blue lighten-2 z-depth-0\">Log In</button>\r\n                    { authError ? <p className=\"red lighten-4\">{ authError}</p> : null }\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        authError: state.auth.authError,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signIn: (credentials) => dispatch(signIn(credentials))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { signUp } from '../../store/actions/authActions'\r\n\r\nclass SignUp extends Component {\r\n    state = {\r\n        email: \"\",\r\n        password: \"\",\r\n        firstName: \"\",\r\n        lastName: \"\"\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.signUp(this.state);\r\n    }\r\n    render() {\r\n        const { auth, authError } = this.props;\r\n\r\n        if (auth.uid) return <Redirect to=\"/\" />\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"yellow\">\r\n                    <h5 className=\"yellow  blue-text lighten-text-2\">Sign Up</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"firstName\">First Name</label>\r\n                        <input type=\"text\" id=\"firstName\" onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"lastName\">Last Name</label>\r\n                        <input type=\"text\" id=\"lastName\" onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn blue lighten-2 z-depth-0\">Sign up</button>\r\n                        { authError ? <p className=\"red lighten-4\">{ authError}</p> : null }\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        authError: state.auth.authError,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signUp: (newUser) => dispatch(signUp(newUser))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp)\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { createProject } from '../../store/actions/projectActions';\r\n\r\nclass ProjectCreation extends Component {\r\n    state = {\r\n        goal: \"\",\r\n        nuggets: \"\"\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.createProject(this.state);\r\n        setTimeout(() => {\r\n            this.props.history.push(\"/\")\r\n        }, 300);\r\n    }\r\n    render() {\r\n        const { auth } = this.props;\r\n\r\n        if (!auth.uid) return <Redirect to=\"/\" />\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"yellow \">\r\n                    <h5 className=\"yellow blue-text lighten-text-2\">\r\n                        Create a goal, make a wish or just tell me something.. ;))\r\n                    </h5>\r\n                    <div className=\"input-field\">\r\n                        <label blue-text lighten-text-2 htmlFor=\"goal\">Title</label>\r\n                        <input type=\"text\" id=\"goal\" onChange={this.handleChange} required />\r\n                    </div>\r\n                    <div className=\"input-field \">\r\n                        <label htmlFor=\"nugget\">Details</label>\r\n                        <textarea id=\"nuggets\" onChange={this.handleChange} className=\"materialize-textarea\"></textarea>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn waves-effect blue lighten-2 z-depth-0\">Create</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        createProject: (project) => dispatch(createProject(project))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProjectCreation)\r\n","import React from 'react'\r\n\r\nconst Notfound = () => {\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\" card center blue lighten-4 red-text text-lighten-2\">\r\n                Page not found\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notfound","import React from 'react';\r\nimport { connect } from 'react-redux'\r\nimport Notifications from '../dashboard/Notifications'\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { compose } from 'redux';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nconst MobileNotifications = (props) => {\r\n    const { notifications, auth } = props;\r\n    \r\n    if (!auth.uid) return <Redirect to=\"/\" />\r\n\r\n        return (\r\n            <div className=\"container yellow\">\r\n                <Notifications notifications={notifications} />\r\n            </div>\r\n        )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        notifications: state.firestore.ordered.notifications,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n       { collection: \"notifications\", limit: 10, orderBy: [\"time\", \"desc\"] }\r\n    ])\r\n)(MobileNotifications)","import React, { Component } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Navbar from './comps/layout/Navbar';\nimport Dashboard from './comps/dashboard/Dashboard';\nimport ProjectDetails from './comps/projects/ProjectDetails';\nimport SignIn from './comps/auth/SignIn';\nimport SignUp from './comps/auth/SignUp';\nimport ProjectCreation from './comps/projects/ProjectCreation';\nimport Notfound from './comps/dashboard/Notfound';\nimport MobileNotifications from './comps/dashboard/MobileNotifications'\nimport M from  'materialize-css/dist/js/materialize.min.js';\n\n// create app font color\n// goal details background color\n\nclass App extends Component {\n  componentDidMount() {\n    let sidenav = document.querySelector('#slide-out');\n    M.Sidenav.init(sidenav, {});\n    let elems = document.querySelectorAll('.dropdown-trigger');\n    M.Dropdown.init(elems, \n      {inDuration: 300, outDuration: 525, constrainWidth: false, coverTrigger: false});\n  }\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <Navbar />\n          <Switch>\n            <Route exact path=\"/\" component={Dashboard} />\n            <Route path=\"/project/:id\" component={ProjectDetails} />\n            <Route path=\"/login\" component={SignIn} />\n            <Route path=\"/signup\" component={SignUp} />\n            <Route path=\"/create\" component={ProjectCreation} />\n            <Route path=\"/notifications\" component={MobileNotifications} />\n            <Route path=\"\" component={Notfound} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initState = {\r\n    authError: null\r\n};\r\n\r\nconst authReducer = (state = initState, action) => {\r\n    switch(action.type){\r\n        case \"LOGIN_ERROR\":\r\n            console.log(\"🌐 :(\")\r\n            return {\r\n                ...state, \r\n                authError: \"Login failed\"\r\n            }\r\n        case \"LOGIN_SUCCESS\":\r\n            console.log(\"🌐 :)\")\r\n            return {\r\n                ...state,\r\n                authError: null\r\n            }\r\n        case \"SIGNOUT_SUCCESS\":\r\n            console.log(\"🌐🌐🌐 :)\")\r\n            return state\r\n        case \"SIGNUP_SUCCESS\":\r\n            console.log(\"🌐🌐🌐 :)\")\r\n            return {\r\n                ...state,\r\n                authError: null\r\n            }\r\n        case \"SIGNUP_ERROR\":\r\n            console.log(\"🌐🌐🌐 :(\")\r\n            return {\r\n                ...state,\r\n                authError: action.err.message\r\n            } \r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default authReducer","const initState = {\r\n    goals: [\r\n        { id: \"1\", goal: \"make this app\", nuggets: \"try hard\" },\r\n        { id: \"2\", goal: \"make another app\", nuggets: \"and then harder\" },\r\n        { id: \"3\", goal: \"make yet another app\", nuggets: \"and then harderer\" }\r\n    ]\r\n};\r\n\r\nconst projectReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case \"CREATE_PROJECT\":\r\n            console.log(\"project created\", action.project)\r\n            return {\r\n                goals: [action.project, ...state.goals]\r\n            }\r\n        case \"CREATE_PROJECT_ERR\":\r\n            console.log(\"create project error\", action.err)\r\n            return state;\r\n        case \"DELETE_PROJECT\":\r\n            console.log(\"project deleted\")\r\n            return state\r\n        case \"DELETE_PROJECT_ERR\":\r\n            console.log(\"project not deleted\", action)\r\n            return state\r\n        default: \r\n            return state\r\n    }\r\n};\r\n\r\nexport default projectReducer","import authReducer from './authReducer';\r\nimport projectReducer from './projectReducer';\r\nimport { combineReducers } from 'redux';\r\nimport { firebaseReducer } from 'react-redux-firebase'\r\nimport { firestoreReducer } from 'redux-firestore'\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    project: projectReducer,\r\n    firebase: firebaseReducer,\r\n    firestore: firestoreReducer\r\n});\r\n\r\nexport default rootReducer\r\n","var fbConfig = {\r\n    apiKey: \"AIzaSyAluzuISOqRsvXsPBIai_PeCgVc_FLkrL0\",\r\n    authDomain: \"focusorium.firebaseapp.com\",\r\n    databaseURL: \"https://focusorium.firebaseio.com\",\r\n    projectId: \"focusorium\",\r\n    storageBucket: \"focusorium.appspot.com\",\r\n    messagingSenderId: \"743201296028\",\r\n    appId: \"1:743201296028:web:73198a2d6f70da5c35e759\",\r\n    measurementId: \"G-QN3MYLV0T0\"\r\n};\r\n\r\n\r\nexport default fbConfig;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from './store/reducers/rootReducer';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport * as firebase from 'firebase/app'\nimport 'firebase/firestore';\nimport 'firebase/auth';\nimport { ReactReduxFirebaseProvider, getFirebase } from 'react-redux-firebase'\nimport {   \n  reduxFirestore,\n  getFirestore,\n  createFirestoreInstance  } from 'redux-firestore'\nimport fbConfig from './config/fbConfig'\nimport { useSelector  } from 'react-redux'\nimport { isLoaded  } from 'react-redux-firebase';\n\n// npm install redux react-redux\n// Provider lets us to combine react and redux\n// thunk lets us to use asynchronous code\n// thunk together with applyMiddleware returns a function inside our action creators which can then interact with the DB\n// npm install react-redux-firebase redux-firestore\n\n\nfirebase.initializeApp(fbConfig)\n\nfirebase.firestore()\n\nconst initialState = {}\n\nconst store = createStore(\n  rootReducer, \n  initialState,\n  compose(\n    applyMiddleware(thunk.withExtraArgument({ getFirestore, getFirebase })),\n    reduxFirestore(firebase, fbConfig)\n  )\n);\n\nconst profileSpecificProps = {\n  userProfile: 'users',\n  useFirestoreForProfile: true,\n  enableRedirectHandling: false,\n  resetBeforeLogin: false\n}\n\nconst rrfProps = {\n  firebase,\n  // config: fbConfig,\n  config: profileSpecificProps,\n  dispatch: store.dispatch,\n  createFirestoreInstance,\n  userProfile: 'users', // where profiles are stored in database\n  presence: 'presence', // where list of online users is stored in database\n  sessions: 'sessions'\n}\n\nfunction AuthIsLoaded({ children }) {\n  const auth = useSelector(state => state.firebase.auth)\n  if (!isLoaded(auth)) return <div>Loading Screen...</div>;\n      return children\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <ReactReduxFirebaseProvider {...rrfProps}> \n        <AuthIsLoaded>\n          <App /> \n        </AuthIsLoaded> \n      </ReactReduxFirebaseProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}